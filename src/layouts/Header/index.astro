---
const { namespace, showHeader } = Astro.props;
const pathname = new URL(Astro.request.url).pathname;

import styles from "./styles.module.css";
import NavMobile from "./NavMobile";
import Menu from "./Menu";
import SecondaryMenu from "./SecondaryMenu";
import Logo from "./Logo";
import ArrowRight from "@icons/ArrowRight";
let showNav = true;
if (typeof Astro.props.showNav !== "undefined") showNav = Astro.props.showNav;
---

<header id="header" class={`${styles.header}`}>
  <div class={`${styles.headerWrapper} border-b-white flex flex-col w-full`}>
    <div class={`${styles.headerTop} flex justify-center items-center`}>
      <div class="container flex items-center justify-between monospace h-full">
        <Logo namespace={namespace} />
        <Menu pathname={pathname} namespace={namespace} />
        <button
          class={`${styles.registerCTA} bg-white text-brand h-full px-4 relative flex flex-row uppercase items-center justify-center`}
        >
          View Boston Gallery
          <div
            class={`${styles.registerBtn} arrowRight ml-4 bg-nextflow flex justify-center items-center p-2 rounded-sm`}
          >
            <ArrowRight />
          </div>
          <a
            href="/2025/boston/gallery"
        
            class="absolute top-0 left-0 right-0 bottom-0 w-full h-full"></a>
        </button>
      </div>
    </div>
    <div
      class={`${styles.navigation} js-secondary-nav transition-all duration-300`}
    >
      <div
        class="container flex items-center justify-center monospace text-xxs"
      >
        {
          namespace && (
            <SecondaryMenu
              pathname={pathname}
              namespace={namespace}
              client:load
            />
          )
        }
      </div>
    </div>
  </div>
</header>

<NavMobile
  pathname={pathname}
  namespace={namespace}
  showNav={showNav}
  client:only="react"
/>

<script>
  document.addEventListener("astro:page-load", () => {
    let secondaryNav = document.querySelector(".js-secondary-nav");
    let prevScrollTop = window.scrollY || document.documentElement.scrollTop;
    let prevScrollDirection = "";

    if (secondaryNav) {
      window.addEventListener(
        "scroll",
        function () {
          const st = window.scrollY || document.documentElement.scrollTop;
          if (st > prevScrollTop && prevScrollDirection !== "down") {
            prevScrollDirection = "down";
            secondaryNav.classList.add("js-hide-nav");
          } else if (st < prevScrollTop && prevScrollDirection !== "up") {
            secondaryNav.classList.remove("js-hide-nav");
            prevScrollDirection = "up";
          }
          prevScrollTop = st <= 0 ? 0 : st;
        },
        false,
      );
    }
  });
</script>
